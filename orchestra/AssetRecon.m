function AssetRecon(acceleratedPfile, calibrationPfile)
%% AssetRecon - Reconstruct accelerated 2D Cartesian K-Space with ASSET
%
% Copyright 2019 General Electric Company. All rights reserved.
% GE Proprietary and Confidential Information. Only to be distributed with
% permission from GE. Resulting outputs are not for diagnostic purposes.
%
% AssetRecon(pfilePath)
% will reconstruct the accelerated Cartesian K-Space in the given pfile
% with ASSET processing. The reference or calibration Pfile must be
% specified to complete the ASSET processing.
%
% Limitations: intensity correction

    % Load accelerated Pfile
    pfile = GERecon('Pfile.Load', acceleratedPfile);

    % Run calibration on reference Pfile
    GERecon('Calibration.Process', calibrationPfile);
    
    for s = 1:pfile.slices
        for c = 1:pfile.channels

            % Load K-Space
            kspace = GERecon('Pfile.KSpace', s, 1, c);

            % Transform K-Space. Applies an apodization filter, performs a
            % 2D inverse Fourier transform, scales the data and returns the 
            % resulting image space data.
            % If both Homodyne and Asset are enabled for
            % the currently active pfile then ASSET must be run on both the 
            % high pass filtered and low pass filtered images generated by 
            % the Homodyne algorithm. For this use case, the third 
            % dimension of the returned aliased image has a size of 2. 
            % The first index of the third dimension contains the high pass 
            % filtered aliased image and the second index contains the low 
            % pass filtered aliased image.
            % See the Asset.Unalias command below for additional details.
            aliasedImage = GERecon('Transform', kspace);

            aliasedImages(:,:,c,:) = aliasedImage;
        end

        % Get corners and orientation for this slice location via
        % the Pfile.Info interface.  This structure provides enough
        % slice information to support slice ASSET acceleration.
        info = GERecon('Pfile.Info', s);
            
        % Apply Asset Unaliasing.                
        % If both Homodyne and Asset are enabled then ASSET must be run on
        % both the high pass filtered and low pass filtered aliased images.
        % The high pass filtered and low pass filtered images can be passed
        % to the Asset.Unalias command in the fourth dimension of the
        % aliasedImages array. The first index of this additional fourth
        % dimension represents high pass filtered images and the second
        % dimension represents low pass filtered images.
        % For all use cases, the first two dimensions contain the aliased
        % image data and the third dimension represents the channel index
        % for a given aliased image.
        unaliasedImage = GERecon('Asset.Unalias', aliasedImages, info);

        % Create Magnitude Image
        magnitudeImage = abs(unaliasedImage);
        
        % Apply Gradwarp
        gradwarpedImage = GERecon('Gradwarp', magnitudeImage, info.Corners);

        % Orient the image and corners
        finalImage = GERecon('Orient', gradwarpedImage, info.Orientation);

        % Display
        imagesc(finalImage);
        
        % Display
        title(['Slice: ' num2str(s)]);

        % Save DICOMs
        filename = ['DICOMs/image' num2str(s) '.dcm'];
        GERecon('Dicom.Write', filename, finalImage, s, ...
            info.Orientation, info.Corners);

        pause(0.1);
    end
end
    
